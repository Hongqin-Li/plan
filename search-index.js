var searchIndex = JSON.parse('{\
"kalloc":{"doc":"Bare-metal memory allocator for kernel development.","i":[[0,"buddy","kalloc","Buddy system allocatorBuddy system is a memory allocation …",null,null],[3,"BuddySystem","kalloc::buddy","Buddy System Allocator Structure.",null,null],[11,"build","","Construct a buddy system allocator at memory [begin, end) …",0,[[["usize",15]],["result",4]]],[11,"alloc1","","Alloccate memory by order.",0,[[["usize",15]]]],[11,"free","","Free the block of memory starting from <code>ptr</code> with specific …",0,[[["usize",15]],["usize",15]]],[11,"alloc","","Allocate memory specified by <code>layout</code>.",0,[[["layout",3]]]],[11,"dealloc","","Free the block of memory starting from <code>ptr</code> with specific …",0,[[["layout",3]]]],[11,"check","","Check the properties maintained by buddy system.",0,[[]]],[3,"MultiBuddySystem","","Allocator that holds multiple buddy systems.",null,null],[11,"new","","Create an empty multi-buddy system allocator.",1,[[]]],[11,"add_zone","","Add zone [begin, end) with page size into this allocator.",1,[[["usize",15]]]],[11,"alloc1","","Allocate memory of <code>2^order</code> pages.",1,[[["usize",15]]]],[11,"alloc","","Allocate memory according to layout.",1,[[["layout",3]]]],[11,"free","","Free memory pointed by ptr with specific layout.",1,[[["usize",15]],["usize",15]]],[11,"dealloc","","Free memory of specific layout.",1,[[["layout",3]]]],[11,"check","","Check that buddy systems donot overlap with each other.",1,[[]]],[11,"overlap","","Check that if memory [begin, end) is overlapped with any …",1,[[["usize",15]],["bool",15]]],[3,"Allocator","","A thread-safe allocator with multiple buddy systems.",null,null],[11,"new","","Create a allocator with empty memory.",2,[[]]],[11,"add_zone","","Add free memory [begin, end) to this allocator.",2,[[["usize",15]]]],[0,"cached","kalloc","Cached multi buddy system",null,null],[3,"Cached","kalloc::cached","Allocator with cached pages.",null,null],[11,"alloc","","Allocate memory according to layout.",3,[[["layout",3]]]],[11,"dealloc","","Free the memory pointed by ptr with specified layout.",3,[[["layout",3]]]],[3,"Allocator","","A thread-safe allocator with multiple buddy systems.",null,null],[11,"new","","Create a allocator with empty memory.",4,[[]]],[11,"add_zone","","Add free memory [begin, end) to this allocator.",4,[[["usize",15]]]],[0,"list","kalloc","A doubly-linked list with owned nodes ported from […",null,null],[3,"List","kalloc::list","A doubly-linked list with owned nodes.",null,null],[3,"Iter","","An iterator over the elements of a <code>List</code>.",null,null],[3,"IterMut","","A mutable iterator over the elements of a <code>List</code>.",null,null],[3,"IntoIter","","An owning iterator over the elements of a <code>List</code>.",null,null],[11,"new","","Creates an empty <code>List</code>.",5,[[]]],[11,"append","","Moves all elements from <code>other</code> to the end of the list.",5,[[]]],[11,"prepend","","Moves all elements from <code>other</code> to the begin of the list.",5,[[]]],[11,"iter","","Provides a forward iterator.",5,[[],["iter",3]]],[11,"iter_mut","","Provides a forward iterator with mutable references.",5,[[],["itermut",3]]],[11,"cursor_front","","Provides a cursor at the front element.",5,[[],["cursor",3]]],[11,"cursor_front_mut","","Provides a cursor with editing operations at the front …",5,[[],["cursormut",3]]],[11,"cursor_back","","Provides a cursor at the back element.",5,[[],["cursor",3]]],[11,"cursor_back_mut","","Provides a cursor with editing operations at the back …",5,[[],["cursormut",3]]],[11,"is_empty","","Returns <code>true</code> if the <code>List</code> is empty.",5,[[],["bool",15]]],[11,"len","","Returns the length of the <code>List</code>.",5,[[],["usize",15]]],[11,"clear","","Removes all elements from the <code>List</code>.",5,[[]]],[11,"contains","","Returns <code>true</code> if the <code>List</code> contains an element equal to the …",5,[[],["bool",15]]],[11,"front","","Provides a reference to the front element, or <code>None</code> if the …",5,[[],["option",4]]],[11,"front_mut","","Provides a mutable reference to the front element, or <code>None</code>…",5,[[],["option",4]]],[11,"back","","Provides a reference to the back element, or <code>None</code> if the …",5,[[],["option",4]]],[11,"back_mut","","Provides a mutable reference to the back element, or <code>None</code> …",5,[[],["option",4]]],[11,"push_front","","Adds an element first in the list.",5,[[],[["allocerror",3],["result",4]]]],[11,"pop_front","","Removes the first element and returns it, or <code>None</code> if the …",5,[[],["option",4]]],[11,"push_back","","Appends an element to the back of a list.",5,[[],[["allocerror",3],["result",4]]]],[11,"pop_back","","Removes the last element from a list and returns it, or …",5,[[],["option",4]]],[11,"split_off","","Splits the list into two at the given index. Returns …",5,[[["usize",15]],["list",3]]],[11,"remove","","Removes the element at the given index and returns it.",5,[[["usize",15]]]],[3,"Cursor","","A cursor over a <code>List</code>.",null,null],[3,"CursorMut","","A cursor over a <code>List</code> with editing operations.",null,null],[11,"index","","Returns the cursor position index within the <code>List</code>.",6,[[],[["usize",15],["option",4]]]],[11,"move_next","","Moves the cursor to the next element of the <code>List</code>.",6,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the <code>List</code>.",6,[[]]],[11,"current","","Returns a reference to the element that the cursor is …",6,[[],["option",4]]],[11,"peek_next","","Returns a reference to the next element.",6,[[],["option",4]]],[11,"peek_prev","","Returns a reference to the previous element.",6,[[],["option",4]]],[11,"index","","Returns the cursor position index within the <code>List</code>.",7,[[],[["usize",15],["option",4]]]],[11,"move_next","","Moves the cursor to the next element of the <code>List</code>.",7,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the <code>List</code>.",7,[[]]],[11,"current","","Returns a reference to the element that the cursor is …",7,[[],["option",4]]],[11,"peek_next","","Returns a reference to the next element.",7,[[],["option",4]]],[11,"peek_prev","","Returns a reference to the previous element.",7,[[],["option",4]]],[11,"as_cursor","","Returns a read-only cursor pointing to the current …",7,[[],["cursor",3]]],[11,"insert_after","","Inserts a new element into the <code>List</code> after the current one.",7,[[],[["allocerror",3],["result",4]]]],[11,"insert_before","","Inserts a new element into the <code>List</code> before the current …",7,[[],[["allocerror",3],["result",4]]]],[11,"remove_current","","Removes the current element from the <code>List</code>.",7,[[],["option",4]]],[11,"remove_current_as_list","","Removes the current element from the <code>List</code> without …",7,[[],[["option",4],["list",3]]]],[11,"splice_after","","Inserts the elements from the given <code>List</code> after the …",7,[[["list",3]]]],[11,"splice_before","","Inserts the elements from the given <code>List</code> before the …",7,[[["list",3]]]],[11,"split_after","","Splits the list into two after the current element. This …",7,[[],["list",3]]],[11,"split_before","","Splits the list into two before the current element. This …",7,[[],["list",3]]],[0,"vecque","kalloc","A double-ended queue implemented with two vector.",null,null],[3,"Vecque","kalloc::vecque","A double-ended queue implemented with two vector.",null,null],[11,"new","","Creates an empty <code>Vecque</code>.",8,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",8,[[["usize",15]],[["allocerror",3],["result",4]]]],[11,"with_capacity","","Creates an empty <code>Vecque</code> with space for at least <code>capacity</code> …",8,[[["usize",15]],[["result",4],["allocerror",3]]]],[11,"get","","Provides a reference to the element at the given index.",8,[[["usize",15]],["option",4]]],[11,"get_mut","","Provides a mutable reference to the element at the given …",8,[[["usize",15]],["option",4]]],[11,"front","","Provides a reference to the front element, or <code>None</code> if the …",8,[[],["option",4]]],[11,"front_mut","","Provides a mutable reference to the front element, or <code>None</code>…",8,[[],["option",4]]],[11,"back","","Provides a reference to the back element, or <code>None</code> if the …",8,[[],["option",4]]],[11,"back_mut","","Provides a mutable reference to the back element, or <code>None</code> …",8,[[],["option",4]]],[11,"pop_front","","Removes the first element and returns it, or <code>None</code> if the …",8,[[],["option",4]]],[11,"pop_back","","Removes the last element from the <code>Vecque</code> and returns it, …",8,[[],["option",4]]],[11,"push_front","","Prepends an element to the <code>Vecque</code>.",8,[[],[["allocerror",3],["result",4]]]],[11,"push_back","","Appends an element to the back of the <code>Vecque</code>.",8,[[],[["allocerror",3],["result",4]]]],[11,"len","","Returns the number of elements in the <code>Vecque</code>.",8,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the <code>Vecque</code> is empty.",8,[[],["bool",15]]],[11,"shrink_to_fit","","Shrinks the capacity of the <code>Vecque</code> as much as possible.",8,[[],[["allocerror",3],["result",4]]]],[11,"capacity","","Returns the number of elements the <code>VecDeque</code> can hold …",8,[[],["usize",15]]],[0,"wrapper","kalloc","OOM wrapper functions.",null,null],[3,"AllocError","kalloc::wrapper","The <code>AllocError</code> error indicates an allocation failure that …",null,null],[4,"TryReserveError","","The error type for <code>try_reserve</code> methods.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the …",9,null],[13,"AllocError","","The memory allocator returned an error",9,null],[12,"layout","kalloc::wrapper::TryReserveError","The layout of allocation request that failed",10,null],[3,"VecDeque","kalloc::wrapper","A double-ended queue implemented with a growable ring …",null,null],[3,"Vec","","A contiguous growable array type, written <code>Vec<T></code> but …",null,null],[3,"HashMap","","A hash map implemented with quadratic probing and SIMD …",null,null],[5,"r2a","","Map [TryReserveError] to [AllocError] for consistency.",null,[[["result",4],["tryreserveerror",4]],[["result",4],["allocerror",3]]]],[5,"vec_push","","OOM Wrapper to push back an element into a vector. …",null,[[["vec",3]],[["allocerror",3],["result",4]]]],[5,"vec_shrink_to_fit","","OOM Wrapper to shrink a vector. O(N).",null,[[["vec",3]],[["allocerror",3],["result",4]]]],[5,"deque_push_front","","OOM Wrapper to push front an element to a deque.",null,[[["vecdeque",3]],[["allocerror",3],["result",4]]]],[5,"deque_push_back","","OOM Wrapper to push back an element to a deque.",null,[[["vecdeque",3]],[["allocerror",3],["result",4]]]],[5,"map_insert","","OOM Wrapper to insert key-valud pair to a hash map.",null,[[["hash",8],["hashmap",3],["eq",8]],[["option",4],["result",4],["allocerror",3]]]],[0,"consts","kalloc","Type aliases for many constants.",null,null],[6,"True","kalloc::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[3,"B0","","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"borrow","kalloc::buddy","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","kalloc::cached","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","kalloc::list","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"get_hash","","",5,[[],["u64",15]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"into_iter","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","kalloc::vecque","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","kalloc::wrapper","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"get_hash","","",15,[[],["u64",15]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"get_hash","","",16,[[],["u64",15]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","kalloc::consts","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"get_hash","","",18,[[],["u64",15]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"get_hash","","",19,[[],["u64",15]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"partial_div","","",20,[[]]],[11,"get_hash","","",20,[[],["u64",15]]],[11,"fmt","kalloc::wrapper","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",14,[[],["allocerror",3]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",14,[[["allocerror",3]],["bool",15]]],[11,"eq","","",15,[[],["bool",15]]],[11,"eq","","",15,[[],["bool",15]]],[11,"eq","","",16,[[],["bool",15]]],[11,"ne","","",16,[[],["bool",15]]],[11,"eq","","",16,[[],["bool",15]]],[11,"ne","","",16,[[],["bool",15]]],[11,"eq","","",16,[[["vec",3]],["bool",15]]],[11,"ne","","",16,[[["vec",3]],["bool",15]]],[11,"eq","","",15,[[],["bool",15]]],[11,"eq","","",15,[[["vecdeque",3]],["bool",15]]],[11,"eq","","",16,[[],["bool",15]]],[11,"ne","","",16,[[],["bool",15]]],[11,"eq","","",15,[[["vec",3]],["bool",15]]],[11,"eq","","",15,[[],["bool",15]]],[11,"eq","","",16,[[],["bool",15]]],[11,"ne","","",16,[[],["bool",15]]],[11,"eq","","",9,[[["tryreserveerror",4]],["bool",15]]],[11,"ne","","",9,[[["tryreserveerror",4]],["bool",15]]],[11,"eq","","",15,[[],["bool",15]]],[11,"eq","","",16,[[],["bool",15]]],[11,"ne","","",16,[[],["bool",15]]],[11,"index_mut","","",15,[[["usize",15]]]],[11,"index_mut","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"extend","","",16,[[]]],[11,"extend_one","","",16,[[]]],[11,"extend_reserve","","",16,[[["usize",15]]]],[11,"extend","","",16,[[]]],[11,"extend_one","","",16,[[]]],[11,"extend_reserve","","",16,[[["usize",15]]]],[11,"extend","","",15,[[]]],[11,"extend_one","","",15,[[]]],[11,"extend_reserve","","",15,[[["usize",15]]]],[11,"extend","","",15,[[]]],[11,"extend_one","","",15,[[]]],[11,"extend_reserve","","",15,[[["usize",15]]]],[11,"borrow","","",16,[[]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",15,[[["vecdeque",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",16,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"borrow_mut","","",16,[[]]],[11,"clone","","",15,[[],["vecdeque",3]]],[11,"clone_from","","",15,[[["vecdeque",3]]]],[11,"clone","","",9,[[],["tryreserveerror",4]]],[11,"clone","","",16,[[],["vec",3]]],[11,"clone_from","","",16,[[["vec",3]]]],[11,"from","","Converts the given <code>String</code> to a vector <code>Vec</code> that holds …",16,[[["string",3]],[["vec",3],["global",3],["u8",15]]]],[11,"from","","",9,[[["layouterror",3]],["tryreserveerror",4]]],[11,"from","","",16,[[["cow",4]],[["global",3],["vec",3]]]],[11,"from","","Converts a <code>BinaryHeap<T></code> into a <code>Vec<T></code>.",16,[[["binaryheap",3]],[["global",3],["vec",3]]]],[11,"from","","",16,[[["box",3]],["vec",3]]],[11,"from","","Turn a <code>VecDeque<T></code> into a <code>Vec<T></code>.",16,[[["vecdeque",3]],[["global",3],["vec",3]]]],[11,"from","","",16,[[],[["global",3],["vec",3]]]],[11,"from","","",16,[[],[["global",3],["vec",3]]]],[11,"from","","",16,[[["str",15]],[["vec",3],["global",3],["u8",15]]]],[11,"from","","Turn a <code>Vec<T></code> into a <code>VecDeque<T></code>.",15,[[["global",3],["vec",3]],["vecdeque",3]]],[11,"from","","",16,[[],[["global",3],["vec",3]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index","","",16,[[]]],[11,"index","","",15,[[["usize",15]]]],[11,"drop","","",15,[[]]],[11,"drop","","",16,[[]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves …",16,[[],["intoiter",3]]],[11,"into_iter","","Consumes the <code>VecDeque</code> into a front-to-back iterator …",15,[[],["intoiter",3]]],[11,"as_ref","","",16,[[]]],[11,"as_ref","","",16,[[],["vec",3]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"as_mut","","",16,[[],["vec",3]]],[11,"as_mut","","",16,[[]]],[11,"cmp","","",15,[[["vecdeque",3]],["ordering",4]]],[11,"cmp","","",16,[[["vec",3]],["ordering",4]]],[11,"default","","Creates an empty <code>Vec<T></code>.",16,[[],[["global",3],["vec",3]]]],[11,"default","","Creates an empty <code>VecDeque<T></code>.",15,[[],["vecdeque",3]]],[11,"from_iter","","",15,[[],["vecdeque",3]]],[11,"from_iter","","",16,[[],[["global",3],["vec",3]]]],[11,"deref_mut","","",16,[[]]],[11,"mul","kalloc::consts","",20,[[["aterm",3]]]],[11,"mul","","",20,[[["tarr",3]]]],[11,"mul","","",20,[[]]],[11,"eq","","",20,[[["z0",3]],["bool",15]]],[11,"eq","","",18,[[["b0",3]],["bool",15]]],[11,"eq","","",19,[[["b1",3]],["bool",15]]],[11,"min","","",18,[[["b0",3]],["b0",3]]],[11,"min","","",20,[[["z0",3]]]],[11,"min","","",20,[[["nint",3]]]],[11,"min","","",20,[[["pint",3]]]],[11,"min","","",19,[[["b0",3]],["b0",3]]],[11,"min","","",19,[[["b1",3]],["b1",3]]],[11,"min","","",18,[[["b1",3]],["b0",3]]],[11,"rem","","",20,[[]]],[11,"compare","","",18,[[["b1",3]]]],[11,"compare","","",19,[[["b0",3]]]],[11,"compare","","",20,[[["nint",3]]]],[11,"compare","","",20,[[["z0",3]]]],[11,"compare","","",18,[[["b0",3]]]],[11,"compare","","",20,[[["pint",3]]]],[11,"compare","","",19,[[["b1",3]]]],[11,"powi","","",20,[[["pint",3]]]],[11,"powi","","",20,[[["nint",3]]]],[11,"powi","","",20,[[["z0",3]]]],[11,"to_i8","","",20,[[],["i8",15]]],[11,"to_i16","","",20,[[],["i16",15]]],[11,"to_i32","","",20,[[],["i32",15]]],[11,"to_i64","","",20,[[],["i64",15]]],[11,"to_isize","","",20,[[],["isize",15]]],[11,"partial_cmp","","",19,[[["b1",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",20,[[["z0",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",18,[[["b0",3]],[["option",4],["ordering",4]]]],[11,"clone","","",19,[[],["b1",3]]],[11,"clone","","",20,[[],["z0",3]]],[11,"clone","","",18,[[],["b0",3]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","",20,[[["z0",3]]]],[11,"sub","","",20,[[["nint",3]]]],[11,"sub","","",20,[[["pint",3]]]],[11,"bitor","","",18,[[["b0",3]]]],[11,"bitor","","",19,[[]]],[11,"bitor","","",18,[[["b1",3]]]],[11,"add","","",20,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",20,[[]]],[11,"not","","",18,[[]]],[11,"not","","",19,[[]]],[11,"bitand","","",19,[[["b0",3]]]],[11,"bitand","","",18,[[]]],[11,"bitand","","",19,[[["b1",3]]]],[11,"to_int","","",20,[[],["i32",15]]],[11,"to_int","","",20,[[],["i16",15]]],[11,"to_int","","",20,[[],["i8",15]]],[11,"to_int","","",20,[[],["i64",15]]],[11,"max","","",20,[[["pint",3]]]],[11,"max","","",18,[[["b1",3]],["b1",3]]],[11,"max","","",20,[[["z0",3]]]],[11,"max","","",20,[[["nint",3]]]],[11,"max","","",19,[[["b1",3]],["b1",3]]],[11,"max","","",18,[[["b0",3]],["b0",3]]],[11,"max","","",19,[[["b0",3]],["b1",3]]],[11,"new","","",19,[[],["b1",3]]],[11,"to_u8","","",19,[[],["u8",15]]],[11,"to_bool","","",19,[[],["bool",15]]],[11,"new","","",18,[[],["b0",3]]],[11,"to_u8","","",18,[[],["u8",15]]],[11,"to_bool","","",18,[[],["bool",15]]],[11,"neg","","",20,[[]]],[11,"cmp","","",19,[[["b1",3]],["ordering",4]]],[11,"cmp","","",20,[[["z0",3]],["ordering",4]]],[11,"cmp","","",18,[[["b0",3]],["ordering",4]]],[11,"bitxor","","",18,[[["b0",3]]]],[11,"bitxor","","",18,[[["b1",3]]]],[11,"bitxor","","",19,[[["b1",3]]]],[11,"bitxor","","",19,[[["b0",3]]]],[11,"div","","",20,[[]]],[11,"default","","",19,[[],["b1",3]]],[11,"default","","",20,[[],["z0",3]]],[11,"default","","",18,[[],["b0",3]]],[11,"into_iter","kalloc::wrapper","Creates a consuming iterator, that is, one that moves …",17,[[],["intoiter",3]]],[11,"eq","","",17,[[["hashmap",3]],["bool",15]]],[11,"default","","Creates an empty <code>HashMap<K, V, S, A></code>, with the <code>Default</code> …",17,[[],["hashmap",3]]],[11,"clone","","",17,[[],["hashmap",3]]],[11,"clone_from","","",17,[[["hashmap",3]]]],[11,"from_iter","","",17,[[],["hashmap",3]]],[11,"extend","","",17,[[]]],[11,"extend","","",17,[[]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index","","Returns a reference to the value corresponding to the …",17,[[]]],[11,"get_hash","","",16,[[],["u64",15]]],[11,"write","","",16,[[],[["usize",15],["error",3],["result",4]]]],[11,"write_vectored","","",16,[[],[["usize",15],["error",3],["result",4]]]],[11,"is_write_vectored","","",16,[[],["bool",15]]],[11,"write_all","","",16,[[],[["result",4],["error",3]]]],[11,"flush","","",16,[[],[["result",4],["error",3]]]],[11,"from","","Converts a [<code>CString</code>] into a [<code>Vec</code>]<code><u8></code>.",16,[[["cstring",3]],[["vec",3],["global",3],["u8",15]]]],[11,"fmt","kalloc::list","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"eq","","",5,[[],["bool",15]]],[11,"ne","","",5,[[],["bool",15]]],[11,"cmp","","",5,[[],["ordering",4]]],[11,"partial_cmp","","",5,[[],[["option",4],["ordering",4]]]],[11,"drop","","",5,[[]]],[11,"index","kalloc::vecque","",8,[[["usize",15]]]],[11,"index_mut","","",8,[[["usize",15]]]],[11,"hash","kalloc::list","",5,[[]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",12,[[],["option",4]]],[11,"next_back","","",13,[[],["option",4]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"last","","",11,[[],["option",4]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"last","","",12,[[],["option",4]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"into_iter","","Consumes the list into an iterator yielding elements by …",5,[[],["intoiter",3]]],[11,"clone","","",11,[[]]],[11,"clone","","",6,[[]]],[11,"default","","Creates an empty <code>List<T></code>.",5,[[]]],[11,"default","kalloc::vecque","Creates an empty <code>VecDeque<T></code>.",8,[[],["vecque",3]]],[11,"alloc","kalloc::buddy","",2,[[["layout",3]]]],[11,"dealloc","","",2,[[["layout",3]]]],[11,"alloc","kalloc::cached","",4,[[["layout",3]]]],[11,"dealloc","","",4,[[["layout",3]]]],[11,"new","kalloc::wrapper","Creates an empty <code>VecDeque</code>.",15,[[],["vecdeque",3]]],[11,"with_capacity","","Creates an empty <code>VecDeque</code> with space for at least <code>capacity</code>…",15,[[["usize",15]],["vecdeque",3]]],[11,"get","","Provides a reference to the element at the given index.",15,[[["usize",15]],["option",4]]],[11,"get_mut","","Provides a mutable reference to the element at the given …",15,[[["usize",15]],["option",4]]],[11,"swap","","Swaps elements at indices <code>i</code> and <code>j</code>.",15,[[["usize",15]]]],[11,"capacity","","Returns the number of elements the <code>VecDeque</code> can hold …",15,[[],["usize",15]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",15,[[["usize",15]]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",15,[[["usize",15]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly …",15,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",15,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the <code>VecDeque</code> as much as possible.",15,[[]]],[11,"shrink_to","","Shrinks the capacity of the <code>VecDeque</code> with a lower bound.",15,[[["usize",15]]]],[11,"truncate","","Shortens the <code>VecDeque</code>, keeping the first <code>len</code> elements and …",15,[[["usize",15]]]],[11,"iter","","Returns a front-to-back iterator.",15,[[],["iter",3]]],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable …",15,[[],["itermut",3]]],[11,"as_slices","","Returns a pair of slices which contain, in order, the …",15,[[]]],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the …",15,[[]]],[11,"len","","Returns the number of elements in the <code>VecDeque</code>.",15,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the <code>VecDeque</code> is empty.",15,[[],["bool",15]]],[11,"range","","Creates an iterator that covers the specified range in …",15,[[],["iter",3]]],[11,"range_mut","","Creates an iterator that covers the specified mutable …",15,[[],["itermut",3]]],[11,"drain","","Creates a draining iterator that removes the specified …",15,[[],["drain",3]]],[11,"clear","","Clears the <code>VecDeque</code>, removing all values.",15,[[]]],[11,"contains","","Returns <code>true</code> if the <code>VecDeque</code> contains an element equal to …",15,[[],["bool",15]]],[11,"front","","Provides a reference to the front element, or <code>None</code> if the …",15,[[],["option",4]]],[11,"front_mut","","Provides a mutable reference to the front element, or <code>None</code>…",15,[[],["option",4]]],[11,"back","","Provides a reference to the back element, or <code>None</code> if the …",15,[[],["option",4]]],[11,"back_mut","","Provides a mutable reference to the back element, or <code>None</code> …",15,[[],["option",4]]],[11,"pop_front","","Removes the first element and returns it, or <code>None</code> if the …",15,[[],["option",4]]],[11,"pop_back","","Removes the last element from the <code>VecDeque</code> and returns …",15,[[],["option",4]]],[11,"push_front","","Prepends an element to the <code>VecDeque</code>.",15,[[]]],[11,"push_back","","Appends an element to the back of the <code>VecDeque</code>.",15,[[]]],[11,"swap_remove_front","","Removes an element from anywhere in the <code>VecDeque</code> and …",15,[[["usize",15]],["option",4]]],[11,"swap_remove_back","","Removes an element from anywhere in the <code>VecDeque</code> and …",15,[[["usize",15]],["option",4]]],[11,"insert","","Inserts an element at <code>index</code> within the <code>VecDeque</code>, shifting …",15,[[["usize",15]]]],[11,"remove","","Removes and returns the element at <code>index</code> from the <code>VecDeque</code>…",15,[[["usize",15]],["option",4]]],[11,"split_off","","Splits the <code>VecDeque</code> into two at the given index.",15,[[["usize",15]],["vecdeque",3]]],[11,"append","","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …",15,[[["vecdeque",3]]]],[11,"retain","","Retains only the elements specified by the predicate.",15,[[]]],[11,"resize_with","","Modifies the <code>VecDeque</code> in-place so that <code>len()</code> is equal to …",15,[[["usize",15]]]],[11,"make_contiguous","","Rearranges the internal storage of this deque so it is …",15,[[]]],[11,"rotate_left","","Rotates the double-ended queue <code>mid</code> places to the left.",15,[[["usize",15]]]],[11,"rotate_right","","Rotates the double-ended queue <code>k</code> places to the right.",15,[[["usize",15]]]],[11,"binary_search","","Binary searches this sorted <code>VecDeque</code> for a given element.",15,[[],[["result",4],["usize",15]]]],[11,"binary_search_by","","Binary searches this sorted <code>VecDeque</code> with a comparator …",15,[[],[["result",4],["usize",15]]]],[11,"binary_search_by_key","","Binary searches this sorted <code>VecDeque</code> with a key …",15,[[],[["result",4],["usize",15]]]],[11,"resize","","Modifies the <code>VecDeque</code> in-place so that <code>len()</code> is equal to …",15,[[["usize",15]]]],[11,"new","","Constructs a new, empty <code>Vec<T></code>.",16,[[],[["global",3],["vec",3]]]],[11,"with_capacity","","Constructs a new, empty <code>Vec<T></code> with the specified …",16,[[["usize",15]],[["global",3],["vec",3]]]],[11,"from_raw_parts","","Creates a <code>Vec<T></code> directly from the raw components of …",16,[[["usize",15]],[["global",3],["vec",3]]]],[11,"new_in","","Constructs a new, empty <code>Vec<T, A></code>.",16,[[],["vec",3]]],[11,"with_capacity_in","","Constructs a new, empty <code>Vec<T, A></code> with the specified …",16,[[["usize",15]],["vec",3]]],[11,"from_raw_parts_in","","Creates a <code>Vec<T, A></code> directly from the raw components of …",16,[[["usize",15]],["vec",3]]],[11,"into_raw_parts","","Decomposes a <code>Vec<T></code> into its raw components.",16,[[]]],[11,"into_raw_parts_with_alloc","","Decomposes a <code>Vec<T></code> into its raw components.",16,[[]]],[11,"capacity","","Returns the number of elements the vector can hold without…",16,[[],["usize",15]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",16,[[["usize",15]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",16,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",16,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly …",16,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",16,[[]]],[11,"shrink_to","","Shrinks the capacity of the vector with a lower bound.",16,[[["usize",15]]]],[11,"into_boxed_slice","","Converts the vector into <code>Box<[T]></code>.",16,[[],["box",3]]],[11,"truncate","","Shortens the vector, keeping the first <code>len</code> elements and …",16,[[["usize",15]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",16,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",16,[[]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",16,[[]]],[11,"as_mut_ptr","","Returns an unsafe mutable pointer to the vector\'s buffer.",16,[[]]],[11,"allocator","","Returns a reference to the underlying allocator.",16,[[]]],[11,"set_len","","Forces the length of the vector to <code>new_len</code>.",16,[[["usize",15]]]],[11,"swap_remove","","Removes an element from the vector and returns it.",16,[[["usize",15]]]],[11,"insert","","Inserts an element at position <code>index</code> within the vector, …",16,[[["usize",15]]]],[11,"remove","","Removes and returns the element at position <code>index</code> within …",16,[[["usize",15]]]],[11,"retain","","Retains only the elements specified by the predicate.",16,[[]]],[11,"dedup_by_key","","Removes all but the first of consecutive elements in the …",16,[[]]],[11,"dedup_by","","Removes all but the first of consecutive elements in the …",16,[[]]],[11,"push","","Appends an element to the back of a collection.",16,[[]]],[11,"pop","","Removes the last element from a vector and returns it, or …",16,[[],["option",4]]],[11,"append","","Moves all the elements of <code>other</code> into <code>Self</code>, leaving <code>other</code> …",16,[[["vec",3]]]],[11,"drain","","Creates a draining iterator that removes the specified …",16,[[],["drain",3]]],[11,"clear","","Clears the vector, removing all values.",16,[[]]],[11,"len","","Returns the number of elements in the vector, also …",16,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the vector contains no elements.",16,[[],["bool",15]]],[11,"split_off","","Splits the collection into two at the given index.",16,[[["usize",15]],["vec",3]]],[11,"resize_with","","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.",16,[[["usize",15]]]],[11,"leak","","Consumes and leaks the <code>Vec</code>, returning a mutable reference …",16,[[]]],[11,"spare_capacity_mut","","Returns the remaining spare capacity of the vector as a …",16,[[]]],[11,"split_at_spare_mut","","Returns vector content as a slice of <code>T</code>, along with the …",16,[[]]],[11,"resize","","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.",16,[[["usize",15]]]],[11,"extend_from_slice","","Clones and appends all elements in a slice to the <code>Vec</code>.",16,[[]]],[11,"extend_from_within","","Copies elements from <code>src</code> range to the end of the vector.",16,[[]]],[11,"dedup","","Removes consecutive repeated elements in the vector …",16,[[]]],[11,"splice","","Creates a splicing iterator that replaces the specified …",16,[[],["splice",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if …",16,[[],["drainfilter",3]]],[11,"new","","Creates an empty <code>HashMap</code>.",17,[[],[["global",3],["hashmap",3],["randomstate",3]]]],[11,"with_capacity","","Creates an empty <code>HashMap</code> with the specified capacity.",17,[[["usize",15]],[["global",3],["hashmap",3],["randomstate",3]]]],[11,"new_in","","Creates an empty <code>HashMap</code> using the given allocator.",17,[[],[["randomstate",3],["hashmap",3]]]],[11,"with_capacity_in","","Creates an empty <code>HashMap</code> with the specified capacity …",17,[[["usize",15]],[["randomstate",3],["hashmap",3]]]],[11,"with_hasher","","Creates an empty <code>HashMap</code> which will use the given hash …",17,[[],[["hashmap",3],["global",3]]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashMap</code> with the specified capacity, …",17,[[["usize",15]],[["hashmap",3],["global",3]]]],[11,"with_hasher_in","","Creates an empty <code>HashMap</code> which will use the given hash …",17,[[],["hashmap",3]]],[11,"with_capacity_and_hasher_in","","Creates an empty <code>HashMap</code> with the specified capacity, …",17,[[["usize",15]],["hashmap",3]]],[11,"hasher","","Returns a reference to the map\'s <code>BuildHasher</code>.",17,[[]]],[11,"capacity","","Returns the number of elements the map can hold without …",17,[[],["usize",15]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The …",17,[[],["keys",3]]],[11,"values","","An iterator visiting all values in arbitrary order. The …",17,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary …",17,[[],["valuesmut",3]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary …",17,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary …",17,[[],["itermut",3]]],[11,"len","","Returns the number of elements in the map.",17,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the map contains no elements.",17,[[],["bool",15]]],[11,"drain","","Clears the map, returning all key-value pairs as an …",17,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",17,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate, …",17,[[],["drainfilter",3]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the …",17,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",17,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",17,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It …",17,[[]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It …",17,[[["usize",15]]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",17,[[],["entry",4]]],[11,"get","","Returns a reference to the value corresponding to the key.",17,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied …",17,[[],["option",4]]],[11,"get_key_value_mut","","Returns the key-value pair corresponding to the supplied …",17,[[],["option",4]]],[11,"contains_key","","Returns <code>true</code> if the map contains a value for the …",17,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",17,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",17,[[],["option",4]]],[11,"try_insert","","Tries to insert a key-value pair into the map, and returns…",17,[[],[["result",4],["occupiederror",3]]]],[11,"remove","","Removes a key from the map, returning the value at the …",17,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",17,[[],["option",4]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",17,[[],["rawentrybuildermut",3]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",17,[[],["rawentrybuilder",3]]],[11,"new","kalloc::consts","Instantiates a singleton representing this bit.",18,[[],["b0",3]]],[11,"new","","Instantiates a singleton representing this bit.",19,[[],["b1",3]]],[11,"new","","Instantiates a singleton representing the integer 0.",20,[[],["z0",3]]]],"p":[[3,"BuddySystem"],[3,"MultiBuddySystem"],[3,"Allocator"],[3,"Cached"],[3,"Allocator"],[3,"List"],[3,"Cursor"],[3,"CursorMut"],[3,"Vecque"],[4,"TryReserveError"],[13,"AllocError"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"AllocError"],[3,"VecDeque"],[3,"Vec"],[3,"HashMap"],[3,"B0"],[3,"B1"],[3,"Z0"]],"a":{"length":[42,3799,3863],"malloc":[3830],"realloc":[3838,3839,3840,3841,3842,3843]}},\
"kcore":{"doc":"Kernel building blocks.","i":[[0,"chan","kcore","Channel and mount space.",null,null],[4,"ChanType","kcore::chan","File type.",null,null],[13,"Dir","","Directory.",0,null],[13,"File","","Plain file.",0,null],[4,"Perm","","Permission control on a file.",null,null],[13,"EXEC","","Execute, == read but check execute permission.",1,null],[13,"READ","","Read-only.",1,null],[13,"WRITE","","Write-only.",1,null],[13,"RDWR","","Read and write.",1,null],[3,"Dirent","","Machine-independent directory entry.",null,null],[12,"len","","Length of file in bytes. Cannot changed by a wstat.",2,null],[12,"mtime","","Timestamp of last change of the content.",2,null],[12,"atime","","Timestamp of last read of the content. Cannot changed by …",2,null],[3,"ChanId","","File identification within a device, analogous to the …",null,null],[12,"path","","The path is a unique file number assigned by a device …",3,null],[12,"version","","The version number is updated whenever the file is …",3,null],[12,"ctype","","Type of the file.",3,null],[3,"ChanKey","","A key representing one client handle of the file. …",null,null],[11,"new","","Create a new chan key.",4,[[["device",8],["arc",3],["usize",15],["chanid",3]]]],[3,"ChanInner","","Mutable part of [Chan].",null,null],[3,"Chan","","Channel represents a virtual file from kernel\'s …",null,null],[11,"attach","","Create a new mount space from the root of a device.",5,[[["device",8],["arc",3]]]],[11,"new","","Create a new mount space rooted at a chan.",5,[[["arc",3]]]],[11,"mount","","Mount file <code>old</code> to this chan.",5,[[["arc",3]]]],[11,"open","","Open a file located at path starting from this chan.",5,[[["bool",15],["option",4],["arc",3]]]],[11,"close","","Close a file. The async destructor.",5,[[["arc",3]]]],[11,"dup","","Duplicate a handle of file.",5,[[["arc",3]],["arc",3]]],[11,"remove","","Remove wrapper.",5,[[]]],[11,"stat","","Stat wrapper.",5,[[]]],[11,"wstat","","Wstat wrapper.",5,[[["dirent",3]]]],[11,"read","","Read wrapper.",5,[[["usize",15]]]],[11,"write","","Write wrapper.",5,[[["usize",15]]]],[0,"dev","kcore","Device driver.",null,null],[8,"Device","kcore::dev","Common trait of a device driver.",null,null],[10,"shutdown","","The async destructor of the device.",6,[[],[["result",4],["pin",3],["allocerror",3]]]],[10,"attach","","Return the root channel. <code>aname</code> is a user-specified hint.",6,[[],[["pin",3],["result",4],["allocerror",3]]]],[10,"open","","Open a file in the directory or reopen a file.",6,[[["bool",15],["option",4],["chanid",3]],[["allocerror",3],["result",4],["pin",3]]]],[10,"close","","Close a file. The drop of channel is done by Chan::close",6,[[["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[10,"remove","","Remove a file by hint such that the server won\'t remove …",6,[[["chanid",3]],[["pin",3],["allocerror",3],["result",4]]]],[10,"stat","","Inquires about the file attribute identified by a channel.",6,[[["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[10,"wstat","","Change the file attribute identified by a channel. Should …",6,[[["dirent",3],["chanid",3]],[["allocerror",3],["pin",3],["result",4]]]],[10,"read","","Read data from a channel by offset and store to buffer.",6,[[["usize",15],["chanid",3]],[["result",4],["allocerror",3],["pin",3]]]],[10,"write","","Write the data in buffer to a channel starting by …",6,[[["usize",15],["chanid",3]],[["result",4],["allocerror",3],["pin",3]]]],[0,"error","kcore","Common error types for kernel development.",null,null],[4,"Error","kcore::error","Kernel errors.",null,null],[13,"OutOfMemory","","When global allocator returns zero.",7,null],[13,"Forbidden","","When access is forbidden.",7,null],[13,"NotFound","","When something not found.",7,null],[13,"BadRequest","","Cannot or will not process the request due to something …",7,null],[13,"Timeout","","When operation timeout.",7,null],[13,"Conflict","","When something already exists.",7,null],[13,"Gone","","Access to the target resource that is no longer available.…",7,null],[13,"InternalError","","When hardware error.",7,null],[13,"InsufficientStorage","","When disk used out.",7,null],[13,"NotImplemented","","When feature not yet implemented.",7,null],[6,"Result","","Sugar of error.",null,null],[0,"utils","kcore","Simple util funtions.",null,null],[5,"round_down","kcore::utils","Round down to the nearest multiple of n.",null,[[["usize",15]],["usize",15]]],[5,"round_up","","Round up to the nearest multiple of n.",null,[[["usize",15]],["usize",15]]],[5,"intersect","","Check if two ranges are intersect with each other.",null,[[["range",3]],["bool",15]]],[0,"vm","kcore","Virtual memory tools.",null,null],[8,"PageTable","kcore::vm","Page table.",null,null],[18,"PG_LAYOUT","","Layout used to alloc and dealloc physical pages from …",8,null],[18,"PGSIZE","","Page size derived from [PG_LAYOUT].",8,null],[18,"USERTOP","","Request map to the page table will be always lower than …",8,null],[10,"new","","Create a new page table.",8,[[],[["error",4],["result",4]]]],[10,"switch","","Switch to this page table.",8,[[]]],[10,"map","","Map virtual address <code>[va, va+pg.size())</code> to physical page <code>pg</code>…",8,[[["usize",15],["page",3]],[["error",4],["result",4]]]],[10,"unmap","","Unmap the pages in <code>[va, va+len)</code> in this page table.",8,[[["usize",15]]]],[3,"Page","","Physical page.",null,null],[11,"va","","Get virtual address of the page.",9,[[],["usize",15]]],[11,"size","","Get the page size.",9,[[],["usize",15]]],[3,"SegmentInner","","Inner data of a segment.",null,null],[4,"Segment","","Segment.",null,null],[13,"Local","","Local segment can be mutable.",10,null],[13,"Shared","","Shared segment should be immutable, which is guaranteed …",10,null],[3,"AddressSpace","","Address space manager.",null,null],[12,"pgdir","","Page table that contains mapping information.",11,null],[11,"new","","Create a new address space.",11,[[],[["error",4],["result",4]]]],[11,"seg_range","","Return va range of the segment that contains <code>addr</code>.",11,[[["usize",15]],[["range",3],["option",4]]]],[11,"attach","","Add an non-empty segment.",11,[[["usize",15],["range",3],["bool",15]],[["bool",15],["error",4],["result",4]]]],[11,"detach","","Remove a segment.",11,[[["usize",15]],[["bool",15],["error",4],["result",4]]]],[11,"share","","Mark the segment as shared.",11,[[["usize",15]],[["bool",15],["error",4],["result",4]]]],[11,"segbrk","","Change the segment from [old_start, old_end) to […",11,[[["usize",15]],[["bool",15],["error",4],["result",4]]]],[11,"fork","","Fork address space and allocate new physical pages only …",11,[[],[["error",4],["result",4]]]],[14,"from_bytes","kcore","Convert slice to uint.",null,null],[11,"borrow","kcore::chan","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","kcore::error","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","kcore::vm","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"fmt","kcore::chan","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","kcore::error","",7,[[["formatter",3]],["result",6]]],[11,"fmt","kcore::vm","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"eq","kcore::chan","",0,[[["chantype",4]],["bool",15]]],[11,"drop","","Use [<code>Self::close</code>] instead, since Rust doesn\'t support …",4,[[]]],[11,"drop","kcore::vm","",9,[[]]],[11,"from","kcore::error","",7,[[["allocerror",3]]]],[11,"from","","",7,[[["tryreserveerror",4]]]],[11,"from","","",7,[[["tryreserveerror",4]]]],[11,"clone","kcore::chan","",0,[[],["chantype",4]]],[11,"clone","","",3,[[],["chanid",3]]],[11,"clone","kcore::error","",7,[[],["error",4]]],[11,"default","kcore::chan","",12,[[],["chaninner",3]]]],"p":[[4,"ChanType"],[4,"Perm"],[3,"Dirent"],[3,"ChanId"],[3,"ChanKey"],[3,"Chan"],[8,"Device"],[4,"Error"],[8,"PageTable"],[3,"Page"],[4,"Segment"],[3,"AddressSpace"],[3,"ChanInner"],[3,"SegmentInner"]]},\
"kdevice":{"doc":"Device driver model and file systems.","i":[[0,"cache","kdevice","Efficient cache layer based on LRU and hash map.",null,null],[4,"CState","kdevice::cache","Status of a cache entry.",null,null],[13,"Empty","","Initial value.",0,null],[13,"Invalid","","Not yet read from disk.",0,null],[13,"Valid","","As latest as the value in disk.",0,null],[13,"Dirty","","Modified in cache but not yet flushed to disk.",0,null],[3,"CNodePtr","","Pointer the a cache entry node.",null,null],[11,"from_addr","","Retrieve node by address pointing to that node.",1,[[["usize",15]]]],[11,"to_addr","","Convert node pointer to address.",1,[[],["usize",15]]],[3,"CNode","","Cache entry node.",null,null],[3,"CacheData","","Inner data structure of the cache.",null,null],[8,"Cache","","Cache trait.",null,null],[16,"Key","","Key type.",2,null],[16,"Value","","Value type.",2,null],[10,"cache_self","","Function used to retrieve the cache.",2,[[],["spinlock",3]]],[11,"new_cache","","Create a new cache with at most n in-memory cache entries.",2,[[["usize",15]],[["result",6],["spinlock",3]]]],[16,"ReadFut","","Future returned by [<code>Self::disk_read</code>].",2,null],[10,"disk_read","","Async function to fetch data from disk, should be …",2,[[]]],[16,"WriteFut","","Future returned by [<code>Self::disk_write</code>].",2,null],[10,"disk_write","","Async function to flush data to disk, should be …",2,[[]]],[16,"GetFut","","Future returned by [<code>Self::cache_get</code>].",2,null],[10,"cache_get","","Get a cache item by key. Won\'t lock it. If key has …",2,[[["bool",15]]]],[10,"cache_invalidate","","Mark all dirty entry as invalid without synchronizing …",2,[[]]],[5,"cache_get","","Get a cache entry by key.",null,[[["bool",15]]]],[5,"cache_invalidate","","See <code>Cache</code>.",null,[[]]],[5,"cache_stat","","Return number of referenced nodes and dirty nodes.",null,[[]]],[3,"CEntry","","Representing a client of a cache entry.",null,null],[11,"lock","","Lock and read the cache entry.",3,[[]]],[11,"leak","","Get pointer to this cache entry.",3,[[],["cnodeptr",3]]],[11,"key","","Get the key of this cache entry.",3,[[]]],[11,"nref","","Get the reference count of this cache entry.",3,[[],["usize",15]]],[11,"from_ptr","","Restore the cache entry from a node pointer. Useful for …",3,[[["cnodeptr",3]]]],[3,"CGuard","","Guard representing the unique ownership of a cache entry.",null,null],[11,"is_dirty","","Check if the buffer is dirty.",4,[[],["bool",15]]],[11,"key","","Return the key of this cache entry.",4,[[]]],[11,"nlocks","","Return the key of this cache entry.",4,[[],["usize",15]]],[11,"unlock","","Release the cache entry.",4,[[["bool",15]]]],[0,"log","kdevice","Log layer supporting transaction operations on blocks.",null,null],[17,"LOGSIZE","kdevice::log","Maximum number of blocks to be trace by log. Note that …",null,null],[17,"MAXOPBLOCKS","","Maximum number of blocks per transactional operation. The …",null,null],[17,"MAXEXOPBLOCKS","","Maximum number of blocks per exclusive transactional …",null,null],[17,"NBUF","","Number of in-memory buffer. Theoretically, <code>LOGSIZE + 2</code>…",null,null],[17,"LOGMAGIC","","Magic value in the header.",null,null],[3,"Log","","Generic log layer with buffer cache.",null,null],[11,"new","","Create a buffer cache with maximum <code>nbuf</code> in-memory buffers.",5,[[["usize",15],["arc",3],["chan",3]]]],[11,"close","","Close the underlying disk file. Async destructor.",5,[[]]],[11,"begin_opx","","Called at the start of each transaction.",5,[[["usize",15]]]],[11,"begin_exop","","Start an exclusive operation.",5,[[]]],[11,"end_exop","","End an exlusive operation.",5,[[["bool",15]]]],[11,"begin_op","","Called at the start of each transaction.",5,[[]]],[11,"end_op","","Called at the end of each operation.",5,[[["bool",15]]]],[11,"trace","","Keep track of a buffer in log.",5,[[["cguard",3]]]],[3,"OpGuard","","Returned by <code>end_op</code>.",null,null],[12,"committed","","If this operation is committed or not finally.",6,null],[0,"block","kdevice","Block device driver.",null,null],[17,"BSIZE","kdevice::block","Block size. The block device hardware should guarantee …",null,null],[8,"BlockBus","","Block device trait that you need to implement for each …",null,null],[10,"probe","","Return Ok if the bus is active.",7,[[],["result",6]]],[10,"read","","Read a block from the block device.",7,[[["usize",15]],["result",6]]],[10,"write","","Write a block to the block device.",7,[[["usize",15]],["result",6]]],[3,"BlockSlot","","Representing a physical device slot.",null,null],[11,"new","","Create a slot with name and bus driver.",8,[[["str",15],["blockbus",8],["box",3]]]],[3,"Blocks","","Block device driver.",null,null],[11,"new","","Create a new block driver that handles several physical …",9,[[]]],[0,"fat","kdevice","File system drivers.",null,null],[3,"FAT","kdevice::fat","TFAT32",null,null],[0,"root","kdevice","The root file system.",null,null],[3,"Root","kdevice::root","The root file system.",null,null],[14,"cache_impl","kdevice","Macro to automatically inject implementations.",null,null],[14,"from_bytes","","Convert slice to uint.",null,null],[11,"borrow","kdevice::cache","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","kdevice::log","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","kdevice::block","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","kdevice::fat","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","kdevice::root","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"cache_self","kdevice::log","",5,[[],["spinlock",3]]],[11,"cache_get","","",5,[[["bool",15]]]],[11,"cache_invalidate","","",5,[[]]],[11,"disk_read","","",5,[[]]],[11,"disk_write","","",5,[[]]],[11,"cache_self","kdevice::fat","",12,[[],["spinlock",3]]],[11,"cache_get","","",12,[[["bool",15]]]],[11,"cache_invalidate","","",12,[[]]],[11,"disk_read","","",12,[[]]],[11,"disk_write","","",12,[[]]],[11,"deref","kdevice::cache","",1,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","kdevice::log","",5,[[["formatter",3]],["result",6]]],[11,"fmt","kdevice::fat","",12,[[["formatter",3]],["result",6]]],[11,"eq","kdevice::cache","",0,[[["cstate",4]],["bool",15]]],[11,"drop","","",3,[[]]],[11,"drop","","",4,[[]]],[11,"drop","kdevice::log","",6,[[]]],[11,"clone","kdevice::cache","",0,[[],["cstate",4]]],[11,"clone","","",1,[[]]],[11,"default","kdevice::root","",13,[[],["root",3]]],[11,"shutdown","kdevice::block","",9,[[],[["result",4],["pin",3],["allocerror",3]]]],[11,"attach","","",9,[[],[["pin",3],["result",4],["allocerror",3]]]],[11,"open","","",9,[[["bool",15],["option",4],["chanid",3]],[["pin",3],["allocerror",3],["result",4]]]],[11,"close","","",9,[[["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"remove","","Remove a block device. Active partition within device are …",9,[[["chanid",3]],[["allocerror",3],["pin",3],["result",4]]]],[11,"stat","","",9,[[["chanid",3]],[["allocerror",3],["pin",3],["result",4]]]],[11,"wstat","","",9,[[["chanid",3],["dirent",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"read","","",9,[[["usize",15],["chanid",3]],[["pin",3],["result",4],["allocerror",3]]]],[11,"write","","",9,[[["usize",15],["chanid",3]],[["pin",3],["result",4],["allocerror",3]]]],[11,"shutdown","kdevice::fat","",12,[[],[["result",4],["pin",3],["allocerror",3]]]],[11,"attach","","",12,[[],[["pin",3],["result",4],["allocerror",3]]]],[11,"open","","",12,[[["bool",15],["option",4],["chanid",3]],[["pin",3],["allocerror",3],["result",4]]]],[11,"close","","",12,[[["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"remove","","Return false the link is already zero or it is an …",12,[[["chanid",3]],[["allocerror",3],["pin",3],["result",4]]]],[11,"stat","","",12,[[["chanid",3]],[["allocerror",3],["pin",3],["result",4]]]],[11,"wstat","","",12,[[["chanid",3],["dirent",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"read","","",12,[[["usize",15],["chanid",3]],[["pin",3],["result",4],["allocerror",3]]]],[11,"write","","",12,[[["usize",15],["chanid",3]],[["pin",3],["result",4],["allocerror",3]]]],[11,"shutdown","kdevice::root","",13,[[],[["result",4],["pin",3],["allocerror",3]]]],[11,"attach","","",13,[[],[["pin",3],["result",4],["allocerror",3]]]],[11,"open","","",13,[[["bool",15],["option",4],["chanid",3]],[["pin",3],["allocerror",3],["result",4]]]],[11,"close","","",13,[[["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"remove","","Return false the link is already zero or it is an …",13,[[["chanid",3]],[["allocerror",3],["pin",3],["result",4]]]],[11,"stat","","",13,[[["chanid",3]],[["allocerror",3],["pin",3],["result",4]]]],[11,"wstat","","",13,[[["chanid",3],["dirent",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"read","","",13,[[["usize",15],["chanid",3]],[["pin",3],["result",4],["allocerror",3]]]],[11,"write","","",13,[[["usize",15],["chanid",3]],[["pin",3],["result",4],["allocerror",3]]]],[11,"new","kdevice::fat","Initialize a new FAT from a virtual disk.",12,[[["usize",15],["arc",3],["chan",3]]]],[11,"to_inode","","Convert qid to inode pointer.",12,[[["u64",15]],[["manuallydrop",3],["centry",3]]]],[11,"to_path","","Convert inode pointer to unique path id.",12,[[["manuallydrop",3],["centry",3]],["u64",15]]],[11,"iget","","Open and increase the reference of a file.",12,[[["inodekey",3]]]],[11,"iput","","Close and decrease the reference counter of a file.",12,[[["manuallydrop",3],["centry",3]]]],[11,"fatrw","","Read or modify a FAT entry. Return the old value.",12,[[["u32",15]]]],[11,"calloc","","Allocate a chain of cluster of len n.",12,[[["usize",15]]]],[11,"removei","","This should only be called when",12,[[["cguard",3]]]],[11,"stati","","Get the meta information of this file.",12,[[["cguard",3]]]],[11,"extend","","Extend the addr pointers.",12,[[["cguard",3]]]],[11,"resize","","Modify the size of this file and update its cluster …",12,[[["cguard",3]]]],[11,"readi","","Read data from inode.",12,[[["usize",15],["cguard",3]]]],[11,"writei","","Write data to inode.",12,[[["usize",15],["cguard",3]]]],[11,"dirlookup","","Look up a file in directory. Return a referenced inode.",12,[[["cguard",3]]]],[11,"dirlink","","Create a directory entry with specific inum.",12,[[["u32",15],["option",4],["bool",15],["cguard",3]]]],[11,"dirempty","","Check if directory is empty.",12,[[["cguard",3]]]]],"p":[[4,"CState"],[3,"CNodePtr"],[8,"Cache"],[3,"CEntry"],[3,"CGuard"],[3,"Log"],[3,"OpGuard"],[8,"BlockBus"],[3,"BlockSlot"],[3,"Blocks"],[3,"CNode"],[3,"CacheData"],[3,"FAT"],[3,"Root"]]},\
"ksched":{"doc":"Asynchronous executor for kernel development.","i":[[0,"mpsc","ksched","A multi-producer, single-consumer queue for sending …",null,null],[3,"Node","ksched::mpsc","Message node.",null,null],[3,"Sender","","The transmission end of a bounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[11,"is_closed","","",0,[[],["bool",15]]],[11,"send","","Sends a value.",0,[[],[["result",4],["option",4]]]],[11,"recv","","Receives the next value for this receiver.",1,[[]]],[11,"close","","Closes the receiving half of a channel, without dropping …",1,[[]]],[5,"channel","","Creates a unbounded mpsc channel for communicating …",null,[[],[["result",4],["allocerror",3]]]],[0,"prique","ksched","Bitmap-based priority queue implementation.",null,null],[6,"Prique8","ksched::prique","Priority queue with 8 priority levels.",null,null],[6,"Prique64","","Priority queue with 64 priority levels.",null,null],[6,"Prique512","","Priority queue with 512 priority levels.",null,null],[6,"Pritask8","","Priority queue of task with 8 priority levels.",null,null],[6,"Pritask64","","Priority queue of task with 64 priority levels.",null,null],[6,"Pritask512","","Priority queue of task with 512 priority levels.",null,null],[8,"PriqueTrait","","Priority queue with eight priority levels.",null,null],[18,"P","","Max nice value.",2,null],[11,"max_nice","","Return the max nice value.",2,[[],["usize",15]]],[10,"new","","Create a new priority queue. Panic if oom.",2,[[]]],[10,"push","","Push back a item with specific priority.",2,[[["usize",15]]]],[10,"pop","","Pop out the item of largest priority(lowest nice value).",2,[[],["option",4]]],[10,"len","","Get the number of elements in queue.",2,[[],["usize",15]]],[10,"check","","Checker funtion for debug.",2,[[]]],[3,"Prique0","","Naive priority queue with single priority level.",null,null],[3,"Pritask0","","Priority queue of task that won\'t oom.",null,null],[3,"Prique","","A wrapper struct to recusively construct priority queues …",null,null],[0,"task","ksched","Async executor and some basic futures.",null,null],[3,"Executor","ksched::task","Executor holds a list of tasks to be processed",null,null],[3,"Task","","Task is our unit of execution and holds a future are …",null,null],[12,"future","","SAFETY: We won\'t poll a future until its reference count …",3,null],[12,"nice","","SAFETY: It\'s a constant.",3,null],[3,"TaskAdapter","","",null,null],[18,"NEW","","",4,null],[11,"new","","",4,[[]]],[5,"spawn","","Spawn a new task to be run.",null,[[["usize",15]],[["result",4],["allocerror",3]]]],[5,"spawn_boxed","","Spawn a new boxed task to be run.",null,[[["usize",15],["future",8],["box",3]],[["result",4],["allocerror",3]]]],[5,"run","","Run tasks until idle.",null,[[]]],[5,"run_all","","Run until all tasks are finished.",null,[[]]],[5,"yield_now","","Cooperatively gives up a timeslice to the task scheduler.",null,[[]]],[0,"time","ksched","Temporal quantification.",null,null],[3,"Duration","ksched::time","A <code>Duration</code> type to represent a span of time, typically …",null,null],[5,"set_timer","","Set the instant timestamp generator, which must always …",null,[[]]],[3,"Instant","","A measurement of a monotonically nondecreasing clock. …",null,null],[11,"now","","Returns an instant corresponding to \\\"now\\\".",5,[[],["instant",3]]],[11,"duration_since","","Returns the amount of time elapsed from another instant …",5,[[["instant",3]],["duration",3]]],[11,"checked_duration_since","","Returns the amount of time elapsed from another instant …",5,[[["instant",3]],[["option",4],["duration",3]]]],[11,"saturating_duration_since","","Returns the amount of time elapsed from another instant …",5,[[["instant",3]],["duration",3]]],[11,"elapsed","","Returns the amount of time elapsed since this instant was …",5,[[],["duration",3]]],[11,"checked_add","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …",5,[[["duration",3]],[["option",4],["instant",3]]]],[11,"checked_sub","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …",5,[[["duration",3]],[["option",4],["instant",3]]]],[0,"sync","ksched","Synchronization primitives.",null,null],[3,"Condvar","ksched::sync","A Condition Variable",null,null],[3,"Mutex","","An async mutex.",null,null],[12,"inner","","Guard towards status and waiting queue.",6,null],[3,"MutexGuard","","A guard that releases the mutex when dropped.",null,null],[3,"RwLock","","An async reader-writer lock.",null,null],[3,"RwLockReadGuard","","A guard that releases the read lock when dropped.",null,null],[3,"RwLockUpgradableReadGuard","","A guard that releases the upgradable read lock when …",null,null],[3,"RwLockWriteGuard","","A guard that releases the write lock when dropped.",null,null],[3,"Spinlock","","This type provides MUTual EXclusion based on spinning.",null,null],[3,"SpinlockGuard","","A guard to which the protected data can be accessed",null,null],[11,"borrow","ksched::mpsc","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","ksched::prique","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","ksched::task","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","ksched::time","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"get_hash","","",12,[[],["u64",15]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"get_hash","","",5,[[],["u64",15]]],[11,"borrow","ksched::sync","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"sub","ksched::time","",12,[[["duration",3]],["duration",3]]],[11,"add","","",12,[[["duration",3]],["duration",3]]],[11,"div_assign","","",12,[[["u32",15]]]],[11,"add_assign","","",12,[[["duration",3]]]],[11,"cmp","","",12,[[["duration",3]],["ordering",4]]],[11,"sum","","",12,[[],["duration",3]]],[11,"sum","","",12,[[],["duration",3]]],[11,"clone","","",12,[[],["duration",3]]],[11,"default","","",12,[[],["duration",3]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub_assign","","",12,[[["duration",3]]]],[11,"eq","","",12,[[["duration",3]],["bool",15]]],[11,"ne","","",12,[[["duration",3]],["bool",15]]],[11,"partial_cmp","","",12,[[["duration",3]],[["option",4],["ordering",4]]]],[11,"hash","","",12,[[]]],[11,"mul_assign","","",12,[[["u32",15]]]],[11,"div","","",12,[[["u32",15]],["duration",3]]],[11,"mul","","",12,[[["u32",15]],["duration",3]]],[11,"new","ksched::prique","",8,[[]]],[11,"push","","",8,[[["usize",15]]]],[11,"pop","","",8,[[],["option",4]]],[11,"len","","",8,[[],["usize",15]]],[11,"check","","",8,[[]]],[11,"new","","",9,[[]]],[11,"push","","",9,[[["usize",15],["task",3],["arc",3]]]],[11,"pop","","",9,[[],["option",4]]],[11,"len","","",9,[[],["usize",15]]],[11,"check","","",9,[[]]],[11,"new","","Create a new priority queue. Panic if oom.",10,[[]]],[11,"push","","Push back a item with specific priority.",10,[[["usize",15]]]],[11,"pop","","Pop out the item of largest priority(lowest nice value).",10,[[],["option",4]]],[11,"len","","",10,[[],["usize",15]]],[11,"check","","",10,[[]]],[11,"deref","ksched::sync","",14,[[]]],[11,"deref","","",16,[[]]],[11,"deref","","",17,[[]]],[11,"deref","","",18,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",14,[[]]],[11,"deref_mut","","",18,[[]]],[11,"deref_mut","","",20,[[]]],[11,"fmt","ksched::mpsc","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","ksched::time","",5,[[["formatter",3]],["result",6]]],[11,"fmt","ksched::sync","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"sub","ksched::time","",5,[[["duration",3]],["instant",3]]],[11,"sub","","",5,[[["instant",3]],["duration",3]]],[11,"eq","","",5,[[["instant",3]],["bool",15]]],[11,"ne","","",5,[[["instant",3]],["bool",15]]],[11,"cmp","","",5,[[["instant",3]],["ordering",4]]],[11,"partial_cmp","","",5,[[["instant",3]],[["option",4],["ordering",4]]]],[11,"add","","PanicsThis function may panic if the resulting point in …",5,[[["duration",3]],["instant",3]]],[11,"add_assign","","",5,[[["duration",3]]]],[11,"sub_assign","","",5,[[["duration",3]]]],[11,"drop","ksched::mpsc","",0,[[]]],[11,"drop","","",1,[[]]],[11,"drop","ksched::sync","",14,[[]]],[11,"drop","","",16,[[]]],[11,"drop","","",17,[[]]],[11,"drop","","The dropping of the SpinlockGuard will release the lock …",20,[[]]],[11,"hash","ksched::time","",5,[[]]],[11,"from","ksched::sync","",6,[[],["mutex",3]]],[11,"from","","",15,[[],["rwlock",3]]],[11,"clone","ksched::mpsc","",0,[[]]],[11,"clone","ksched::task","",4,[[]]],[11,"clone","ksched::time","",5,[[],["instant",3]]],[11,"default","ksched::task","",11,[[]]],[11,"default","","",4,[[]]],[11,"default","ksched::sync","",13,[[]]],[11,"default","","",6,[[],["mutex",3]]],[11,"default","","",15,[[],["rwlock",3]]],[11,"default","","",19,[[],["spinlock",3]]],[11,"get_value","ksched::task","",4,[[]]],[11,"get_link","","",4,[[]]],[11,"link_ops","","",4,[[]]],[11,"link_ops_mut","","",4,[[]]],[11,"pointer_ops","","",4,[[]]],[11,"wake_by_ref","","",3,[[["arc",3]]]],[18,"SECOND","ksched::time","The duration of one second.",12,null],[18,"MILLISECOND","","The duration of one millisecond.",12,null],[18,"MICROSECOND","","The duration of one microsecond.",12,null],[18,"NANOSECOND","","The duration of one nanosecond.",12,null],[18,"ZERO","","A duration of zero time.",12,null],[18,"MAX","","The maximum duration.",12,null],[11,"new","","Creates a new <code>Duration</code> from the specified number of whole …",12,[[["u32",15],["u64",15]],["duration",3]]],[11,"from_secs","","Creates a new <code>Duration</code> from the specified number of whole …",12,[[["u64",15]],["duration",3]]],[11,"from_millis","","Creates a new <code>Duration</code> from the specified number of …",12,[[["u64",15]],["duration",3]]],[11,"from_micros","","Creates a new <code>Duration</code> from the specified number of …",12,[[["u64",15]],["duration",3]]],[11,"from_nanos","","Creates a new <code>Duration</code> from the specified number of …",12,[[["u64",15]],["duration",3]]],[11,"is_zero","","Returns true if this <code>Duration</code> spans no time.",12,[[],["bool",15]]],[11,"as_secs","","Returns the number of <em>whole</em> seconds contained by this …",12,[[],["u64",15]]],[11,"subsec_millis","","Returns the fractional part of this <code>Duration</code>, in whole …",12,[[],["u32",15]]],[11,"subsec_micros","","Returns the fractional part of this <code>Duration</code>, in whole …",12,[[],["u32",15]]],[11,"subsec_nanos","","Returns the fractional part of this <code>Duration</code>, in …",12,[[],["u32",15]]],[11,"as_millis","","Returns the total number of whole milliseconds contained …",12,[[],["u128",15]]],[11,"as_micros","","Returns the total number of whole microseconds contained …",12,[[],["u128",15]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this …",12,[[],["u128",15]]],[11,"checked_add","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …",12,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_add","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …",12,[[["duration",3]],["duration",3]]],[11,"checked_sub","","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …",12,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_sub","","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …",12,[[["duration",3]],["duration",3]]],[11,"checked_mul","","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …",12,[[["u32",15]],[["duration",3],["option",4]]]],[11,"saturating_mul","","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>…",12,[[["u32",15]],["duration",3]]],[11,"checked_div","","Checked <code>Duration</code> division. Computes <code>self / other</code>, …",12,[[["u32",15]],[["duration",3],["option",4]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this <code>Duration</code> …",12,[[],["f64",15]]],[11,"as_secs_f32","","Returns the number of seconds contained by this <code>Duration</code> …",12,[[],["f32",15]]],[11,"from_secs_f64","","Creates a new <code>Duration</code> from the specified number of …",12,[[["f64",15]],["duration",3]]],[11,"from_secs_f32","","Creates a new <code>Duration</code> from the specified number of …",12,[[["f32",15]],["duration",3]]],[11,"mul_f64","","Multiplies <code>Duration</code> by <code>f64</code>.",12,[[["f64",15]],["duration",3]]],[11,"mul_f32","","Multiplies <code>Duration</code> by <code>f32</code>.",12,[[["f32",15]],["duration",3]]],[11,"div_f64","","Divide <code>Duration</code> by <code>f64</code>.",12,[[["f64",15]],["duration",3]]],[11,"div_f32","","Divide <code>Duration</code> by <code>f32</code>.",12,[[["f32",15]],["duration",3]]],[11,"div_duration_f64","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.",12,[[["duration",3]],["f64",15]]],[11,"div_duration_f32","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.",12,[[["duration",3]],["f32",15]]],[11,"new","ksched::sync","Creates a new condition variable",13,[[]]],[11,"wait","","Blocks the current task until this condition variable …",13,[[["mutexguard",3]]]],[11,"await_notify","","Wait for a notification and release the lock.",13,[[["mutexguard",3]]]],[11,"spin_wait","","Blocks the current task until this condition variable …",13,[[["spinlockguard",3]]]],[11,"spin_await_notify","","Wait for a notification and release the lock.",13,[[["spinlockguard",3]]]],[11,"wait_until","","Blocks the current taks until this condition variable …",13,[[["mutexguard",3]]]],[11,"spin_wait_until","","Blocks the current taks until this condition variable …",13,[[["spinlockguard",3]]]],[11,"notify_one","","Wakes up one blocked task on this condvar.",13,[[]]],[11,"notify_all","","Wakes up all blocked tasks on this condvar.",13,[[]]],[11,"new","","Creates a new async mutex.",6,[[],["mutex",3]]],[11,"into_inner","","Consumes the mutex, returning the underlying data.",6,[[]]],[11,"acquire","","Acquire the mutex, which must be release manually by […",6,[[]]],[11,"release","","unlock",6,[[]]],[11,"lock","","Acquires the mutex.",6,[[]]],[11,"try_lock","","Attempts to acquire the mutex.",6,[[],[["mutexguard",3],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[]]],[11,"source","","Returns a reference to the mutex a guard came from.",14,[[["mutexguard",3]],["mutex",3]]],[11,"new","","Creates a new reader-writer lock.",15,[[],["rwlock",3]]],[11,"into_inner","","Unwraps the lock and returns the inner value.",15,[[]]],[11,"try_read","","Attempts to acquire a read lock.",15,[[],[["option",4],["rwlockreadguard",3]]]],[11,"read","","Acquires a read lock.",15,[[]]],[11,"try_upgradable_read","","Attempts to acquire a read lock with the possiblity to …",15,[[],[["option",4],["rwlockupgradablereadguard",3]]]],[11,"upgradable_read","","Attempts to acquire a read lock with the possiblity to …",15,[[]]],[11,"try_write","","Attempts to acquire a write lock.",15,[[],[["option",4],["rwlockwriteguard",3]]]],[11,"write","","Acquires a write lock.",15,[[]]],[11,"get_mut","","Returns a mutable reference to the inner value.",15,[[]]],[11,"downgrade","","Downgrades into a regular reader guard.",17,[[],["rwlockreadguard",3]]],[11,"try_upgrade","","Attempts to upgrade into a write lock.",17,[[],[["rwlockwriteguard",3],["result",4]]]],[11,"upgrade","","Upgrades into a write lock.",17,[[]]],[11,"downgrade","","Downgrades into a regular reader guard.",18,[[],["rwlockreadguard",3]]],[11,"downgrade_to_upgradable","","Downgrades into an upgradable reader guard.",18,[[],["rwlockupgradablereadguard",3]]],[11,"new","","Creates a new spinlock wrapping the supplied data.",19,[[],["spinlock",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",19,[[]]],[11,"get_mut","","Get mutable reference of underlying data.",19,[[]]],[11,"acquire","","Acquire the spinlock without guard.",19,[[]]],[11,"lock","","Locks the spinlock and returns a guard.",19,[[],["spinlockguard",3]]],[11,"release","","Force unlock the spinlock.",19,[[]]],[11,"try_lock","","Tries to lock the mutex. If it is already locked, it will …",19,[[],[["option",4],["spinlockguard",3]]]],[11,"source","","Returns a reference to the spinlock a guard came from.",20,[[["spinlockguard",3]],["spinlock",3]]]],"p":[[3,"Sender"],[3,"Receiver"],[8,"PriqueTrait"],[3,"Task"],[3,"TaskAdapter"],[3,"Instant"],[3,"Mutex"],[3,"Node"],[3,"Prique0"],[3,"Pritask0"],[3,"Prique"],[3,"Executor"],[3,"Duration"],[3,"Condvar"],[3,"MutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockUpgradableReadGuard"],[3,"RwLockWriteGuard"],[3,"Spinlock"],[3,"SpinlockGuard"]]},\
"ktest":{"doc":"","i":[[0,"fs","ktest","",null,null],[3,"FileDisk","ktest::fs","",null,null],[11,"new","","",0,[[]]],[3,"MemDisk","","",null,null],[11,"new","","",1,[[["usize",15]]]],[5,"gen_fat32img","","",null,[[]]],[5,"crud","","",null,[[["debug",8],["send",8],["sync",8],["device",8],["vec",3]]]],[5,"create_dir","","",null,[[["debug",8],["send",8],["sync",8],["device",8],["vec",3]]]],[5,"rand_str","ktest","",null,[[["usize",15]],["string",3]]],[5,"rand_int","","",null,[[["range",3],["usize",15]],["usize",15]]],[5,"run_multi","","",null,[[["usize",15]]]],[11,"from","ktest::fs","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"shutdown","","",0,[[],[["result",4],["pin",3],["allocerror",3]]]],[11,"attach","","",0,[[],[["pin",3],["result",4],["allocerror",3]]]],[11,"open","","",0,[[["option",4],["bool",15],["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"close","","",0,[[["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"remove","","",0,[[["chanid",3]],[["allocerror",3],["result",4],["pin",3]]]],[11,"stat","","",0,[[["chanid",3]],[["pin",3],["result",4],["allocerror",3]]]],[11,"wstat","","",0,[[["dirent",3],["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"read","","",0,[[["usize",15],["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"write","","",0,[[["usize",15],["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"shutdown","","",1,[[],[["result",4],["pin",3],["allocerror",3]]]],[11,"attach","","",1,[[],[["pin",3],["result",4],["allocerror",3]]]],[11,"open","","",1,[[["option",4],["bool",15],["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"close","","",1,[[["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"remove","","",1,[[["chanid",3]],[["allocerror",3],["result",4],["pin",3]]]],[11,"stat","","",1,[[["chanid",3]],[["pin",3],["result",4],["allocerror",3]]]],[11,"wstat","","",1,[[["dirent",3],["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"read","","",1,[[["usize",15],["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]],[11,"write","","",1,[[["usize",15],["chanid",3]],[["result",4],["pin",3],["allocerror",3]]]]],"p":[[3,"FileDisk"],[3,"MemDisk"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);