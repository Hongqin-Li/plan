(function() {var implementors = {};
implementors["kcore"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt; for <a class=\"enum\" href=\"kcore/error/enum.Error.html\" title=\"enum kcore::error::Error\">Error</a>","synthetic":false,"types":["kcore::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/enum.TryReserveError.html\" title=\"enum alloc::collections::TryReserveError\">TryReserveError</a>&gt; for <a class=\"enum\" href=\"kcore/error/enum.Error.html\" title=\"enum kcore::error::Error\">Error</a>","synthetic":false,"types":["kcore::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;TryReserveError&gt; for <a class=\"enum\" href=\"kcore/error/enum.Error.html\" title=\"enum kcore::error::Error\">Error</a>","synthetic":false,"types":["kcore::error::Error"]}];
implementors["ksched"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"ksched/sync/struct.Mutex.html\" title=\"struct ksched::sync::Mutex\">Mutex</a>&lt;T&gt;","synthetic":false,"types":["ksched::mutex::Mutex"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"ksched/sync/struct.RwLock.html\" title=\"struct ksched::sync::RwLock\">RwLock</a>&lt;T&gt;","synthetic":false,"types":["ksched::rwlock::RwLock"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()